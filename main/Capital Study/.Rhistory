model_hypo2 = brm(
MAD_abs_s ~ trial_type +
(trial_type || subject_id)+
(1|exemplar),
control=list(adapt_delta=0.99, max_treedepth=15),
data = capital
)
model_hypo2
prior_summary(model_hypo2)
#fitting the model to the actual data
pp_check(model_hypo2)
# Extract the posteriors
posteriors2_trial_type <- model_hypo2 %>%
spread_draws(b_Intercept,
b_trial_typeTypical) %>%
# calculate posteriors for each individual level
mutate(Atypical = b_Intercept,
Typical = b_Intercept + b_trial_typeTypical) %>%
select(Atypical, Typical) %>%
gather(key = "parameter", value = "posterior") %>%
group_by(parameter) %>%
summarise(mean_posterior = mean(posterior),
`95lowerCrI` = HDInterval::hdi(posterior, credMass = 0.90)[1],
`95higherCrI` = HDInterval::hdi(posterior, credMass = 0.90)[2])
posteriors2_trial_type
# Extract the posteriors
posteriors2 <- model_hypo2 %>%
spread_draws(b_trial_typeTypical) %>%
select(b_trial_typeTypical) %>%
gather(key = "parameter", value = "posterior")
posteriors2
posterior2_agg <- posteriors2 %>%
mutate(mean_posterior = mean(posterior))
posterior2_agg
# plot
ggplot(data = posteriors2_trial_type,
aes(x = parameter, y = mean_posterior,
color = parameter, fill = parameter)) +
geom_errorbar(aes(ymin = `95lowerCrI`, ymax = `95higherCrI`),
width = 0.2, color = "grey") +
geom_line(aes(group = 1), color = "black") +
geom_point(size = 4) +
labs(x = "trial_type",
y = "posterior MAD scaled")
# plot the regression coefficients
ggplot(posteriors2, aes(x = posterior, y = parameter)) +
# plot density
geom_halfeyeh(.width = 0.95) +
# add axes titles
xlab("\nMAD") +
ylab("") +
# adjust the x-axis
scale_x_continuous(limits = c(-10,10)) +
# add line for the value zero
geom_segment(x = 0, xend = 0, y = Inf, yend = -Inf,
lty = "dashed")
#computing evidential ratio and posterior probability
hypothesis(model_hypo2, "trial_typeTypical > -42.19")
capital$mousetrackingDuration_s = my_scale(capital$mousetrackingDuration)
#informative prior
# prior_hypo3 <- c(
#   #priors for all fixed effects (trial_type)
#   set_prior("student_t(3, 0, 2)", class = "sigma"),
#   #prior for the Intercept
#   set_prior("student_t(3, -0.5, 2)", class = "Intercept"),
#   #prior for all SDs including the varying intercepts and slopes
#   set_prior("student_t(3, 0, 2)", class = "sd")
# )
#by-subject_id varying intercepts and varying
#slope, without slope/intercept correlation
#by-exemplar varying intercept
model_hypo3 = brm(
mousetrackingDuration_s ~ trial_type +
(trial_type || subject_id)+
(1|exemplar),
control=list(adapt_delta=0.99, max_treedepth=15),
data = capital
)
model_hypo3
prior_summary(model_hypo3)
#fitting the model to the actual data
pp_check(model_hypo3)
# Extract the posteriors
posteriors3_trial_type <- model_hypo3 %>%
spread_draws(b_Intercept,
b_trial_typeTypical) %>%
# calculate posteriors for each individual level
mutate(Atypical = b_Intercept,
Typical = b_Intercept + b_trial_typeTypical) %>%
select(Atypical, Typical) %>%
gather(key = "parameter", value = "posterior") %>%
group_by(parameter) %>%
summarise(mean_posterior = mean(posterior),
`95lowerCrI` = HDInterval::hdi(posterior, credMass = 0.90)[1],
`95higherCrI` = HDInterval::hdi(posterior, credMass = 0.90)[2])
posteriors3_trial_type
# Extract the posteriors
posteriors3 <- model_hypo3 %>%
spread_draws(b_trial_typeTypical) %>%
select(b_trial_typeTypical) %>%
gather(key = "parameter", value = "posterior")
posteriors3
posterior3_agg <- posteriors3 %>%
mutate(mean_posterior = mean(posterior))
posterior3_agg
# plot
ggplot(data = posteriors3_trial_type,
aes(x = parameter, y = mean_posterior,
color = parameter, fill = parameter)) +
geom_errorbar(aes(ymin = `95lowerCrI`, ymax = `95higherCrI`),
width = 0.2, color = "grey") +
geom_line(aes(group = 1), color = "black") +
geom_point(size = 4) +
labs(x = "trial_type",
y = "posterior mousetrackingDuration scaled")
# plot the regression coefficients
ggplot(posteriors3, aes(x = posterior, y = parameter)) +
# plot density
geom_halfeyeh(.width = 0.95) +
# add axes titles
xlab("\nmousetrackingDuration") +
ylab("") +
# adjust the x-axis
scale_x_continuous(limits = c(-10,10)) +
# add line for the value zero
geom_segment(x = 0, xend = 0, y = Inf, yend = -Inf,
lty = "dashed")
#computing evidential ratio and posterior probability
hypothesis(model_hypo3, "trial_typeTypical > -42.19")
capital$factor_prototype_label <- factor(capital$prototype_label)
#multinomial logistic regression model
#by-subject_id varying intercepts and varying
#slope, without slope/intercept correlation
#by-exemplar varying intercept
model_hypo4 <- brm(
factor_prototype_label ~ trial_type +
(trial_type || subject_id)+
(1|exemplar),
data = capital,
family = categorical(link = "logit", refcat = NULL)
)
model_hypo4
#fitting model to the actual data
pp_check(model_hypo4)
#plotting marginal probabilities
marginal_effects(model_hypo4, "trial_type", categorical = TRUE)
#extracting posteriors
predicted_hypo4 <- model_hypo4 %>%
spread_draws(b_mucurved_Intercept,
b_mudCoM_Intercept,
b_mustraight_Intercept,
b_mudCoM2_Intercept,
b_mucurved_trial_typeTypical,
b_mudCoM_trial_typeTypical,
b_mustraight_trial_typeTypical,
b_mudCoM2_trial_typeTypical) %>%
# mutating the parameters with their coefficient combination
mutate(curved_Atypical = plogis(b_mucurved_Intercept),
curved_Typical = plogis(b_mucurved_Intercept + b_mucurved_trial_typeTypical),
dCoM_Atypical = plogis(b_mudCoM_Intercept),
dCoM_Typical = plogis(b_mudCoM_Intercept + b_mudCoM_trial_typeTypical),
straight_Atypical = plogis(b_mustraight_Intercept),
straight_Typical = plogis(b_mustraight_Intercept + b_mustraight_trial_typeTypical),
dCoM2_Atypical = plogis(b_mudCoM2_Intercept),
dCoM2_Typical = plogis(b_mudCoM2_Intercept + b_mudCoM2_trial_typeTypical),
cCoM_Atypical = plogis(b_mucurved_Intercept + b_mudCoM_Intercept + b_mustraight_Intercept + b_mudCoM2_Intercept),
cCoM_Typical = plogis(b_mucurved_Intercept + b_mudCoM_Intercept + b_mustraight_Intercept + b_mucurved_trial_typeTypical +
b_mudCoM_trial_typeTypical + b_mustraight_trial_typeTypical + b_mudCoM2_Intercept + b_mudCoM2_trial_typeTypical)) %>%
select(curved_Atypical, curved_Typical, dCoM_Atypical, dCoM_Typical, dCoM2_Atypical, dCoM2_Typical, straight_Atypical, straight_Typical, cCoM_Atypical, cCoM_Typical) %>%
gather(key = "parameter", value = "posterior") %>%
#muatating categories for cluster and condition for better plotting
mutate(prototype = ifelse(parameter == "curved_Atypical" | parameter == "curved_Typical",
"curved",ifelse(parameter == "dCoM_Atypical"|parameter == "dCoM_Typical", "dCoM", ifelse(parameter == "straight_Atypical"|parameter == "straight_Typical", "straight", ifelse(parameter == "dCoM2_Atypical" | parameter == "dCoM2_Typical",
"dCoM2", "cCoM")))),
trial_type = ifelse(parameter == "curved_Atypical" | parameter == "dCoM_Atypical" | parameter == "straight_Atypical" | parameter == "cCoM_Atypical"| parameter == "dCoM2_Atypical",
"Atypical", "Typical")) %>%
group_by(prototype, trial_type) %>%
summarise(mean_posterior = mean(posterior),
`95lowerCrI` = HDInterval::hdi(posterior, credMass = 0.90)[1],
`95higherCrI` = HDInterval::hdi(posterior, credMass = 0.90)[2])
predicted_hypo4
#plotting mean posterior probability of every prototype for each trial type
ggplot(predicted_hypo4) +
geom_errorbar(aes(x = trial_type, y = mean_posterior, color = prototype,
ymin = `95lowerCrI`, ymax = `95higherCrI`),
width = 0.2,  position = position_dodge(width = 0.6)) +
geom_point(aes(x = trial_type, y = mean_posterior, fill = prototype),
size = 4, pch = 21, color = "black", position = position_dodge(0.6))
capital$RT_log <- log(capital$RT)
capital$RT_log_s = my_scale(capital$RT_log)
#informative priors
prior_hypo5 <- c(
#priors for all fixed effects (trial_type)
set_prior("student_t(3, 0, 2)", class = "sigma"),
#prior for the Intercept
set_prior("student_t(3, 7, 2)", class = "Intercept"),
#prior for all SDs including the varying intercepts and slopes
set_prior("student_t(3, 0, 2)", class = "sd")
)
#by-subject_id varying intercepts and varying
#slope, without slope/intercept correlation
#by-exemplar varying intercept
model_hypo5 = brm(
RT_log ~ trial_type +
(trial_type || subject_id)+
(1 |exemplar),
control=list(adapt_delta=0.99, max_treedepth=15),
data = capital,
prior = prior_hypo5
)
model_hypo5
#fitting the model to the actual data
pp_check(model_hypo5)
# Extract the posteriors
posteriors5_trial_type <- model_hypo5 %>%
spread_draws(b_Intercept,
b_trial_typeTypical) %>%
# calculate posteriors for each individual level
mutate(Atypical = b_Intercept,
Typical = b_Intercept + b_trial_typeTypical) %>%
select(Atypical, Typical) %>%
gather(key = "parameter", value = "posterior") %>%
group_by(parameter) %>%
summarise(mean_posterior = mean(posterior),
`95lowerCrI` = HDInterval::hdi(posterior, credMass = 0.90)[1],
`95higherCrI` = HDInterval::hdi(posterior, credMass = 0.90)[2])
posteriors5_trial_type
# Extract the posteriors
posteriors5 <- model_hypo5 %>%
spread_draws(b_trial_typeTypical) %>%
select(b_trial_typeTypical) %>%
gather(key = "parameter", value = "posterior")
posteriors5
posterior5_agg <- posteriors5 %>%
mutate(mean_posterior = mean(posterior))
posterior5_agg
# plot
ggplot(data = posteriors5_trial_type,
aes(x = parameter, y = mean_posterior,
color = parameter, fill = parameter)) +
geom_errorbar(aes(ymin = `95lowerCrI`, ymax = `95higherCrI`),
width = 0.2, color = "grey") +
geom_line(aes(group = 1), color = "black") +
geom_point(size = 4) +
labs(x = "trial_type",
y = "posterior RT_log scaled")
# plot the regression coefficients
ggplot(posteriors5, aes(x = posterior, y = parameter)) +
# plot density
geom_halfeyeh(.width = 0.95) +
# add axes titles
xlab("\nRT_log") +
ylab("") +
# adjust the x-axis
scale_x_continuous(limits = c(-10,10)) +
# add line for the value zero
geom_segment(x = 0, xend = 0, y = Inf, yend = -Inf,
lty = "dashed")
#computing evidential ratio and posterior probability
hypothesis(model_hypo5, "trial_typeTypical > -42.19")
capital$initiation_time_s = my_scale(capital$initiation_time)
#informative priors
# prior_hypo6 <- c(
#   #priors for all fixed effects (trial_type)
#   set_prior("student_t(3, 300, 400)", class = "b"),
#   #prior for the Intercept
#   set_prior("student_t(3, 300,200)", class = "Intercept"),
#   #prior for all SDs including the varying intercepts and slopes
#   set_prior("student_t(3, 0, 200)", class = "sd"),
#   set_prior("student_t(3, 0, 200)", class = "sigma")
# )
#by-subject_id varying intercepts and varying
#slope, without slope/intercept correlation
#by-exemplar varying intercept
model_hypo6 = brm(
initiation_time_s ~ trial_type +
(trial_type || subject_id)+
(1 |exemplar),
control=list(adapt_delta=0.99, max_treedepth=15),
data = capital
)
model_hypo6
prior_summary(model_hypo6)
#fitting the model to the actual data
pp_check(model_hypo6)
# Extract the posteriors
posteriors6_trial_type <- model_hypo6 %>%
spread_draws(b_Intercept,
b_trial_typeTypical) %>%
# calculate posteriors for each individual level
mutate(Atypical = b_Intercept,
Typical = b_Intercept + b_trial_typeTypical) %>%
select(Atypical, Typical) %>%
gather(key = "parameter", value = "posterior") %>%
group_by(parameter) %>%
summarise(mean_posterior = mean(posterior),
`95lowerCrI` = HDInterval::hdi(posterior, credMass = 0.90)[1],
`95higherCrI` = HDInterval::hdi(posterior, credMass = 0.90)[2])
posteriors6_trial_type
# Extract the posteriors
posteriors6 <- model_hypo6 %>%
spread_draws(b_trial_typeTypical) %>%
select(b_trial_typeTypical) %>%
gather(key = "parameter", value = "posterior")
posteriors6
posterior6_agg <- posteriors6 %>%
mutate(mean_posterior = mean(posterior))
posterior6_agg
# plot
ggplot(data = posteriors6_trial_type,
aes(x = parameter, y = mean_posterior,
color = parameter, fill = parameter)) +
geom_errorbar(aes(ymin = `95lowerCrI`, ymax = `95higherCrI`),
width = 0.2, color = "grey") +
geom_line(aes(group = 1), color = "black") +
geom_point(size = 4) +
labs(x = "trial_type",
y = "posterior initiation time")
# plot the regression coefficients
ggplot(posteriors6, aes(x = posterior, y = parameter)) +
# plot density
geom_halfeyeh(.width = 0.95) +
# add axes titles
xlab("\nInitiation Time") +
ylab("") +
# adjust the x-axis
scale_x_continuous(limits = c(-5000,5000)) +
# add line for the value zero
geom_segment(x = 0, xend = 0, y = Inf, yend = -Inf,
lty = "dashed")
#computing evidential ratio and posterior probability
hypothesis(model_hypo6, "trial_typeTypical > -42.19")
capital$traveledDistance_abs <- abs(capital$traveledDistance)
capital$traveledDistance_abs_s <- my_scale(capital$traveledDistance_abs)
#informative prior
# prior_hypo7 <- c(
#   #prior for the Intercept
#   set_prior("student_t(3, 10,15)", class = "Intercept"),
#   #prior for all SDs including the varying intercepts and slopes
#   set_prior("student_t(3, 0, 15)", class = "sd"),
#   set_prior("student_t(3, 0, 15)", class = "sigma")
# )
#by-subject_id varying intercepts and varying
#slope, without slope/intercept correlation
#by-exemplar varying intercept
model_hypo7 = brm(
traveledDistance_abs_s ~ trial_type +
(trial_type || subject_id)+
(1 |exemplar),
control=list(adapt_delta=0.99, max_treedepth=15),
data = capital
)
model_hypo7
prior_summary(model_hypo7)
#fitting the model to the actual data
pp_check(model_hypo7)
# Extract the posteriors
posteriors7_trial_type <- model_hypo7 %>%
spread_draws(b_Intercept,
b_trial_typeTypical) %>%
# calculate posteriors for each individual level
mutate(Atypical = b_Intercept,
Typical = b_Intercept + b_trial_typeTypical) %>%
select(Atypical, Typical) %>%
gather(key = "parameter", value = "posterior") %>%
group_by(parameter) %>%
summarise(mean_posterior = mean(posterior),
`95lowerCrI` = HDInterval::hdi(posterior, credMass = 0.90)[1],
`95higherCrI` = HDInterval::hdi(posterior, credMass = 0.90)[2])
posteriors7_trial_type
# Extract the posteriors
posteriors7 <- model_hypo7 %>%
spread_draws(b_trial_typeTypical) %>%
select(b_trial_typeTypical) %>%
gather(key = "parameter", value = "posterior")
posteriors7
posterior7_agg <- posteriors7 %>%
mutate(mean_posterior = mean(posterior))
posterior7_agg
# plot
ggplot(data = posteriors7_trial_type,
aes(x = parameter, y = mean_posterior,
color = parameter, fill = parameter)) +
geom_errorbar(aes(ymin = `95lowerCrI`, ymax = `95higherCrI`),
width = 0.2, color = "grey") +
geom_line(aes(group = 1), color = "black") +
geom_point(size = 4) +
labs(x = "trial_type",
y = "posterior traveled Distance")
# plot the regression coefficients
ggplot(posteriors7, aes(x = posterior, y = parameter)) +
# plot density
geom_halfeyeh(.width = 0.95) +
# add axes titles
xlab("\n Traveled Distance") +
ylab("") +
# adjust the x-axis
scale_x_continuous(limits = c(-500,500)) +
# add line for the value zero
geom_segment(x = 0, xend = 0, y = Inf, yend = -Inf,
lty = "dashed")
#computing evidential ratio and posterior probability
hypothesis(model_hypo7, "trial_typeTypical > -42.19")
# prior_hypo3 <- c(
#   #priors for all fixed effects (trial_type)
#   set_prior("student_t(3, 0, 2)", class = "sigma"),
#   #prior for the Intercept
#   set_prior("student_t(3, -0.5, 2)", class = "Intercept"),
#   #prior for all SDs including the varying intercepts and slopes
#   set_prior("student_t(3, 0, 2)", class = "sd")
# )
prior_summary(model_hypo3)
#computing evidential ratio and posterior probability
hypothesis(model_hypo3, "trial_typeTypical > -0.67")
#computing evidential ratio and posterior probability
hypothesis(model_hypo5, "trial_typeTypical > -0,28")
#computing evidential ratio and posterior probability
hypothesis(model_hypo5, "trial_typeTypical > -0,28")
posterior5_agg
#computing evidential ratio and posterior probability
hypothesis(model_hypo5, "trial_typeTypical > -0,286")
#computing evidential ratio and posterior probability
hypothesis(model_hypo5, "trial_typeTypical > (-0,28)")
#computing evidential ratio and posterior probability
hypothesis(model_hypo5, "trial_typeTypical > -(-0,28)")
#computing evidential ratio and posterior probability
hypothesis(model_hypo5, "(trial_typeTypical) > -(-0,28)")
#computing evidential ratio and posterior probability
hypothesis(model_hypo5, "(trial_typeTypical) > 0,28")
#computing evidential ratio and posterior probability
hypothesis(model_hypo5, "(trial_typeTypical) > 0,28")
# plot
ggplot(data = posteriors5_trial_type,
aes(x = parameter, y = mean_posterior,
color = parameter, fill = parameter)) +
geom_errorbar(aes(ymin = `95lowerCrI`, ymax = `95higherCrI`),
width = 0.2, color = "grey") +
geom_line(aes(group = 1), color = "black") +
geom_point(size = 4) +
labs(x = "trial_type",
y = "posterior RT_log scaled")
# plot the regression coefficients
ggplot(posteriors5, aes(x = posterior, y = parameter)) +
# plot density
geom_halfeyeh(.width = 0.95) +
# add axes titles
xlab("\nRT_log") +
ylab("") +
# adjust the x-axis
scale_x_continuous(limits = c(-10,10)) +
# add line for the value zero
geom_segment(x = 0, xend = 0, y = Inf, yend = -Inf,
lty = "dashed")
#computing evidential ratio and posterior probability
#hypothesis(model_hypo5, "(trial_typeTypical) > 0,28")
# plot
ggplot(data = posteriors6_trial_type,
aes(x = parameter, y = mean_posterior,
color = parameter, fill = parameter)) +
geom_errorbar(aes(ymin = `95lowerCrI`, ymax = `95higherCrI`),
width = 0.2, color = "grey") +
geom_line(aes(group = 1), color = "black") +
geom_point(size = 4) +
labs(x = "trial_type",
y = "posterior initiation time")
# plot the regression coefficients
ggplot(posteriors6, aes(x = posterior, y = parameter)) +
# plot density
geom_halfeyeh(.width = 0.95) +
# add axes titles
xlab("\nInitiation Time") +
ylab("") +
# adjust the x-axis
scale_x_continuous(limits = c(-5,5)) +
# add line for the value zero
geom_segment(x = 0, xend = 0, y = Inf, yend = -Inf,
lty = "dashed")
#computing evidential ratio and posterior probability
hypothesis(model_hypo6, "trial_typeTypical > -42.19")
#computing evidential ratio and posterior probability
hypothesis(model_hypo6, "trial_typeTypical > -0.31")
#computing evidential ratio and posterior probability
hypothesis(model_hypo5, "(trial_typeTypical) > -0.28")
# plot
ggplot(data = posteriors7_trial_type,
aes(x = parameter, y = mean_posterior,
color = parameter, fill = parameter)) +
geom_errorbar(aes(ymin = `95lowerCrI`, ymax = `95higherCrI`),
width = 0.2, color = "grey") +
geom_line(aes(group = 1), color = "black") +
geom_point(size = 4) +
labs(x = "trial_type",
y = "posterior traveled Distance")
# plot the regression coefficients
ggplot(posteriors7, aes(x = posterior, y = parameter)) +
# plot density
geom_halfeyeh(.width = 0.95) +
# add axes titles
xlab("\n Traveled Distance") +
ylab("") +
# adjust the x-axis
scale_x_continuous(limits = c(-5,5)) +
# add line for the value zero
geom_segment(x = 0, xend = 0, y = Inf, yend = -Inf,
lty = "dashed")
#computing evidential ratio and posterior probability
hypothesis(model_hypo7, "trial_typeTypical > -42.19")
#computing evidential ratio and posterior probability
hypothesis(model_hypo7, "trial_typeTypical > -0.27")
setwd("~/CS-SS20/Experimental_Psychology_Lab/Final_Project/XPLab2020_FinalProject/main/Original Study")
setwd("~/CS-SS20/Experimental_Psychology_Lab/Final_Project/XPLab2020_FinalProject/main/Original Study")
setwd("~/CS-SS20/Experimental_Psychology_Lab/Final_Project/XPLab2020_FinalProject/main/Capital Study")
